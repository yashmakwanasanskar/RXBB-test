import {
  PatientInfo,
  PatientAppointment
} from "@/types";
import { userProfile } from "@/constants/images";

// Error messages
export const connectError: string = "Please Check Your Internet Connection!";
export const serverError: string =
  "An unexpected error occurred. Please try again.";
export const appError: string =
  "Please try again later. If the issue persists, contact support.";

// Application name
export const appName: string = "RXBB";

/**
 * Retrieves dummy patient data.
 * @returns {Promise<PatientInfo[]>} Promise containing an array of PatientInfo objects.
 */
export async function getPatientData(): Promise<PatientInfo[]> {
  return [
    {
      image: userProfile.path,
      patient_name: "John Wick",
      email: "john@gmail.com",
      status: "Transferred",
      dob: "03-05-1998",
      mobile: "+1 (413) 383-9583",
      //address: "2572 Burke Street Boston",
      name: "",
      sex: "Male",
    },
    {
      image: userProfile.path,
      patient_name: "Viral Mehta",
      email: "123@gmail.com",
      status: "Active",
      dob: "07-05-1985",
      mobile: "+1 (819) 167-9875",
      //address: "1272 Whitetail Lane Grosse Pointe",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 3,
    },
    {
      image: userProfile.path,
      patient_name: "Victroia Clarke",
      email: "456@gmail.com",
      status: "Active",
      dob: "11-08-2006",
      mobile: "+1 (629) 996-1599",
      //address: "3727 Central Avenue Fair Lawn",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 7,
    },
    {
      image: userProfile.path,
      patient_name: "Rushabh",
      email: "789@gmail.com",
      status: "Inactive",
      dob: "20-06-1993",
      mobile: "+1 (173) 677-8909",
      //address: "1742 Wildwood Street Youngstown",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 2,
    },
    {
      image: userProfile.path,
      patient_name: "Henry Ford",
      email: "132@gmail.com",
      status: "Inactive",
      dob: "06-05-1994",
      mobile: "+1 (262) 341-5849",
      //address: "4844 Zappia Drive Lexington",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 1,
    },
    {
      image: userProfile.path,
      patient_name: "Harry Test",
      email: "654@gmail.com",
      status: "Inactive",
      dob: "01-05-1978",
      mobile: "+1 (260) 531-7711",
      //address: "1106 Emily Renzelli Boulevard Carmel",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 3,
    },
    {
      image: userProfile.path,
      patient_name: "Technician Test",
      email: "987@gmail.com",
      status: "Transferred",
      dob: "09-05-1999",
      mobile: "+1 (470) 126-2158",
      //address: "2572 Burke Street Boston",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 8,
    },
    {
      image: userProfile.path,
      patient_name: "Data Test",
      email: "987@gmail.com",
      status: "Transferred",
      dob: "05-05-2003",
      mobile: "+1 (063) 257-3475",
      //address: "2068 Heritage Road Oakhurst",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 1,
    },
    {
      image: userProfile.path,
      patient_name: "Ray McCoy",
      email: "987@gmail.com",
      status: "Active",
      dob: "07-05-2000",
      mobile: "+1 (292) 584-6576",
      //address: "3997 Massachusetts Avenue Washington",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 0,
    },
    {
      image: userProfile.path,
      patient_name: "Ray McCoy",
      email: "john@gmail.com",
      status: "Inactive",
      dob: "04-05-1998",
      mobile: "+1 (493) 703-3016",
      //address: "1083 Bird Spring Lane Houston",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 2,
    },
    {
      image: userProfile.path,
      patient_name: "Harry Test",
      email: "654@gmail.com",
      status: "Inactive",
      dob: "01-05-1978",
      mobile: "+1 (545) 526-2115",
      //address: "358 Nutter Street Blue Springs",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 2,
    },
    {
      image: userProfile.path,
      patient_name: "Technician Test",
      email: "987@gmail.com",
      status: "Transferred",
      dob: "09-05-1999",
      mobile: "+1 (021) 525-1238",
      //address: "2653 Richison Drive Libby",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 3,
    },
    {
      image: userProfile.path,
      patient_name: "Data Test",
      email: "987@gmail.com",
      status: "Transferred",
      dob: "05-05-2003",
      mobile: "+1 (955) 572-9478",
      //address: "2572 Burke Street Boston",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 1,
    },
    {
      image: userProfile.path,
      patient_name: "Viral Mehta",
      email: "123@gmail.com",
      status: "Active",
      dob: "07-05-1985",
      mobile: "+1 (585) 705-1323",
      //address: "2572 Burke Street Boston",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 0,
    },
    {
      image: userProfile.path,
      patient_name: "Victroia Clarke",
      email: "456@gmail.com",
      status: "Active",
      dob: "11-08-2006",
      mobile: "+1 (564) 940-1289",
      //address: "2574 West Drive Bennet",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 0,
    },
    {
      image: userProfile.path,
      patient_name: "Rushabh",
      email: "789@gmail.com",
      status: "Inactive",
      dob: "20-06-1993",
      mobile: "+1 (875) 984-9086",
      //address: "4736 Scenicview Drive Bellevue",
      name: "",
      sex: "Male",
      // insurance: "-",
      // totalAppointments: 4,
    },
  ];
}

/**
 * Retrieves dummy patient data.
 * @returns {Promise<PatientAppointmentList[]>} Promise containing an array of PatientInfo objects.
 */
export async function getServiceData(): Promise<any[]> {
  return [
    {
      title: "Hola",
      appointmentType: "New CMR Service ",
      date: "03-05-1998",
      patient: "Noting",
      time: "11:30pm PST",
      status: "Transferred",
      id: "001",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "07-05-1985",
      patient: "test patient",
      time: "9:30pm PST",
      status: "Inactive",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "03-05-1998",
      patient: "test patient",
      time: "3:30pm PST",
      status: "Inactive",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "11-08-2006",
      patient: "test patient",
      time: "1:30pm PST",
      status: "Transferred",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "03-05-1998",
      patient: "test patient",
      time: "11:30pm PST",
      status: "Transferred",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "20-06-1993",
      patient: "test patient",
      time: "11:30pm PST",
      status: "Inactive",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "06-05-1994",
      patient: "test patient",
      time: "9:30pm PST",
      status: "Inactive",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "03-05-1998",
      patient: "test patient",
      time: "9:30pm PST",
      status: "Transferred",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "01-05-1978",
      patient: "test patient",
      time: "9:30pm PST",
      status: "Active",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "09-05-1999",
      patient: "test patient",
      time: "6:30pm PST",
      status: "Transferred",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "05-05-2003",
      patient: "test patient",
      time: "6:30pm PST",
      status: "Active",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "07-05-2000",
      patient: "test patient",
      time: "6:30pm PST",
      status: "Active",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "04-05-1998",
      patient: "test patient",
      time: "3:30pm PST",
      status: "Transferred",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "04-05-1998",
      patient: "test patient",
      time: "3:30pm PST",
      status: "Active",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "New CMR Service ",
      date: "04-05-1998",
      patient: "test patient",
      time: "1:30pm PST",
      status: "Transferred",
      id: "007",
    },
    {
      title: "Test",
      appointmentType: "Immunization Service",
      date: "04-05-1998",
      patient: "test patient",
      time: "1:30pm PST",
      status: "Transferred",
      id: "007",
    },
  ];
}

/**
 * Retrieves dummy patient Appointment data.
 * @returns {Promise<PatientAppointment[]>} Promise containing an array of PatientInfo objects.
 */

export async function getPatientAppointmentData(): Promise<
  PatientAppointment[]
> {
  return [
    { 
      title: "Data Patient New C..",
      status: "Scheduled",
      appointment_date: "03-30-2024",
      name: "APT00069",
    },
  ];
}
export function getEventData(){
  return [{
    id: 1,
    title: 'Long Event',
    start: new Date(2015, 3, 7),
    end: new Date(2015, 3, 10),
  },

  {
    id: 2,
    title: 'DTS STARTS',
    start: new Date(2016, 2, 13, 0, 0, 0),
    end: new Date(2016, 2, 20, 0, 0, 0),
  },

  {
    id: 3,
    title: 'DTS ENDS',
    start: new Date(2016, 10, 6, 0, 0, 0),
    end: new Date(2016, 10, 13, 0, 0, 0),
  },

  {
    id: 4,
    title: 'Some Event',
    start: new Date(2015, 3, 9, 0, 0, 0),
    end: new Date(2015, 3, 9, 0, 0, 0),
    allDay: true,
  },

  {
    id: 92,
    title: 'Some Other Event',
    start: new Date(2015, 3, 9, 8, 0, 0),
    end: new Date(2015, 3, 10, 11, 30, 0),
  },
  {
    id: 5,
    title: 'Conference',
    start: new Date(2015, 3, 11),
    end: new Date(2015, 3, 13),
    desc: 'Big conference for important people',
  },
  {
    id: 6,
    title: 'Meeting',
    start: new Date(2015, 3, 12, 10, 30, 0, 0),
    end: new Date(2015, 3, 12, 12, 30, 0, 0),
    desc: 'Pre-meeting meeting, to prepare for the meeting',
  },
  {
    id: 7,
    title: 'Lunch',
    start: new Date(2015, 3, 12, 12, 0, 0, 0),
    end: new Date(2015, 3, 12, 13, 0, 0, 0),
    desc: 'Power lunch',
  },
  {
    id: 8,
    title: 'Meeting',
    start: new Date(2015, 3, 12, 14, 0, 0, 0),
    end: new Date(2015, 3, 12, 15, 0, 0, 0),
  },
  {
    id: 9,
    title: 'Happy Hour',
    start: new Date(2015, 3, 12, 17, 0, 0, 0),
    end: new Date(2015, 3, 12, 17, 30, 0, 0),
    desc: 'Most important meal of the day',
  },
  {
    id: 10,
    title: 'Dinner',
    start: new Date(2015, 3, 12, 20, 0, 0, 0),
    end: new Date(2015, 3, 12, 21, 0, 0, 0),
  },
  {
    id: 11,
    title: 'Planning Meeting with Paige',
    start: new Date(2015, 3, 13, 8, 0, 0),
    end: new Date(2015, 3, 13, 10, 30, 0),
  },
  {
    id: 11.1,
    title: 'Inconvenient Conference Call',
    start: new Date(2015, 3, 13, 9, 30, 0),
    end: new Date(2015, 3, 13, 12, 0, 0),
  },
  {
    id: 11.2,
    title: "Project Kickoff - Lou's Shoes",
    start: new Date(2015, 3, 13, 11, 30, 0),
    end: new Date(2015, 3, 13, 14, 0, 0),
  },
  {
    id: 11.3,
    title: 'Quote Follow-up - Tea by Tina',
    start: new Date(2015, 3, 13, 15, 30, 0),
    end: new Date(2015, 3, 13, 16, 0, 0),
  },
  {
    id: 12,
    title: 'Late Night Event',
    start: new Date(2015, 3, 17, 19, 30, 0),
    end: new Date(2015, 3, 18, 2, 0, 0),
  },
  {
    id: 12.5,
    title: 'Late Same Night Event',
    start: new Date(2015, 3, 17, 19, 30, 0),
    end: new Date(2015, 3, 17, 23, 30, 0),
  },
  {
    id: 13,
    title: 'Multi-day Event',
    start: new Date(2015, 3, 20, 19, 30, 0),
    end: new Date(2015, 3, 22, 2, 0, 0),
  },
  {
    id: 14,
    title: 'Today',
    start: new Date(new Date().setHours(new Date().getHours() - 3)),
    end: new Date(new Date().setHours(new Date().getHours() + 3)),
  },
  {
    id: 14,
    title: 'Today',
    start: new Date(new Date().setHours(new Date().getHours() - 3)),
    end: new Date(new Date().setHours(new Date().getHours() + 3)),
  },
  {
    id: 15,
    title: 'Point in Time Event',
    start: new Date(),
    end: new Date(new Date().setHours(new Date().getHours() + 3)),
  },
  {
    id: 16,
    title: 'Video Record',
    start: new Date(2015, 3, 14, 15, 30, 0),
    end: new Date(2015, 3, 14, 19, 0, 0),
  },
  {
    id: 17,
    title: 'Dutch Song Producing',
    start: new Date(2015, 3, 14, 16, 30, 0),
    end: new Date(2015, 3, 14, 20, 0, 0),
  },
  {
    id: 18,
    title: 'Itaewon Meeting',
    start: new Date(2015, 3, 14, 16, 30, 0),
    end: new Date(2015, 3, 14, 17, 30, 0),
  },
  {
    id: 19,
    title: 'Online Coding Test',
    start: new Date(2015, 3, 14, 17, 30, 0),
    end: new Date(2015, 3, 14, 20, 30, 0),
  },
  {
    id: 20,
    title: 'An overlapped Event',
    start: new Date(2015, 3, 14, 17, 0, 0),
    end: new Date(2015, 3, 14, 18, 30, 0),
  },
  {
    id: 21,
    title: 'Phone Interview',
    start: new Date(2015, 3, 14, 17, 0, 0),
    end: new Date(2015, 3, 14, 18, 30, 0),
  },
  {
    id: 22,
    title: 'Cooking Class',
    start: new Date(2015, 3, 14, 17, 30, 0),
    end: new Date(2015, 3, 14, 19, 0, 0),
  },
  {
    id: 23,
    title: 'Go to the gym',
    start: new Date(2015, 3, 14, 18, 30, 0),
    end: new Date(2015, 3, 14, 20, 0, 0),
  },
  {
    id: 24,
    title: 'DST ends on this day (Europe)',
    start: new Date(2022, 9, 30, 0, 0, 0),
    end: new Date(2022, 9, 30, 4, 30, 0),
  },
  {
    id: 25,
    title: 'DST ends on this day (America)',
    start: new Date(2022, 10, 6, 0, 0, 0),
    end: new Date(2022, 10, 6, 4, 30, 0),
  },
  {
    id: 26,
    title: 'DST starts on this day (America)',
    start: new Date(2023, 2, 12, 0, 0, 0),
    end: new Date(2023, 2, 12, 4, 30, 0),
  },
  {
    id: 27,
    title: 'DST starts on this day (Europe)',
    start: new Date(2023, 2, 26, 0, 0, 0),
    end: new Date(2023, 2, 26, 4, 30, 0),
  }]
}

